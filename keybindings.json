// Place your key bindings in this file to override the defaults
[
    {
        "key": "escape",
        "command": "-calva.clearInlineResults"
    },
    {
        "key": "ctrl+z",
        "command": "calva.clearInlineResults",
        "when": "editorTextFocus && !editorHasMultipleSelections && !editorReadOnly && !hasOtherSuggestions && !suggestWidgetVisible && editorLangId == 'clojure'"
    },
    {
        "when": "calva:activated",
        "key": "ctrl+c ctrl+k",
        "command": "calva.loadFile"
    },
    {
        "key": "shift+ctrl+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands",
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.toggleSidebarVisibility",
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor",
    },
    {
        "key": "alt+l",
        "command": "paredit.slurpSexpForward",
        "when": "calva:activated"
    },
    {
        "key": "alt+h",
        "command": "paredit.barfSexpForward",
        "when": "calva:activated"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+x ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+z",
        "command": "-undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+z",
        "command": "-undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+z",
        "command": "-undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+w",
        "command": "paredit.sexpRangeExpansion",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+w",
        "command": "-paredit.sexpRangeExpansion",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "ctrl+q",
        "command": "-extension.vim_winCtrlQ",
        "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
    },
]