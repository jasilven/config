{
  "vim.insertModeKeyBindings": [],
  "vim.visualModeKeyBindings": [
    {
      "before": [
        ":",
      ],
      "commands": [
        "workbench.action.showCommands",
      ]
    },
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": [
        "f"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "s",
      ],
      "when": "editorFocus",
    },
  ],
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": [
        "j",
        "k"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "R"
      ],
      "after": []
    },
    {
      "before": [
        "-"
      ],
      "commands": [
        "workbench.action.navigateBack"
      ]
    },
    {
      "before": [
        ":",
      ],
      "commands": [
        "workbench.action.showCommands",
      ]
    },
    {
      "before": [
        "f1",
      ],
      "commands": [
        "editor.action.showHover",
      ]
    },
    {
      "before": [
        "K",
      ],
      "commands": [
        "editor.action.showHover",
      ]
    },
    {
      "before": [
        "z",
        "z"
      ],
      "commands": [
        "editor.foldAll",
      ]
    },
    {
      "before": [
        "z",
        "r"
      ],
      "commands": [
        "editor.unfoldAll",
      ]
    },
    {
      "before": [
        "z",
        "a"
      ],
      "commands": [
        "editor.unfoldRecursively",
      ]
    },
    {
      "before": [
        "z",
        "m"
      ],
      "commands": [
        "editor.unfoldRecursively",
      ]
    },
    {
      "before": [
        "<leader>",
        "x"
      ],
      "commands": [
        "calva.evaluateCurrentTopLevelForm",
      ]
    },
    {
      "before": [
        "<leader>",
        "b"
      ],
      "commands": [
        "workbench.action.quickOpen",
      ]
    },
    {
      "before": [
        "<leader>",
        "e"
      ],
      "commands": [
        {
          "command": "editor.action.marker.next",
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "c"
      ],
      "commands": [
        {
          "command": "workbench.action.tasks.runTask",
          "args": [
            "cargo check"
          ],
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "j"
      ],
      "commands": [
        "workbench.action.gotoSymbol",
      ]
    },
    {
      "before": [
        "<leader>",
        "w"
      ],
      "commands": [
        "workbench.action.files.save",
      ]
    }
  ],
  "vim.handleKeys": {
    "<C-r>": true,
    "<C-c>": false,
    "<C-k>": false,
    "<C-x>": false,
    "<C-a>": false,
    "<C-e>": false,
    "<C-w>": false,
    "<C-s>": false,
    "<C-n>": false,
    "<C-v>": false,
    "<C-f>": false
  },
  // "vim.easymotionMarkerWidthPerChar": 14,
  "vim.easymotion": true,
  "vim.easymotionKeys": "hklyuopnm,qwertzxcvbasdgjf",
  "vim.easymotionMarkerFontSize": "19",
  "vim.easymotionMarkerFontWeight": "bold",
  "vim.easymotionMarkerFontFamily": "Fira Code",
  "vim.easymotionMarkerHeight": 0,
  "vim.easymotionMarkerYOffset": 13,
  "vim.easymotionMarkerForegroundColorOneChar": "#FF0000",
  "vim.easymotionMarkerForegroundColorTwoChar": "#FF0000",
  "vim.visualstar": true,
  "vim.sneak": false,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": false,
  "vim.hlsearch": false,
  "editor.highlightActiveIndentGuide": true,
  "editor.renderIndentGuides": false,
  "editor.minimap.enabled": false,
  "window.zoomLevel": 0,
  "workbench.startupEditor": "newUntitledFile",
  "editor.fontSize": 16,
  "editor.fontFamily": "'Monaco', 'Fira Code Retina','Fira Code', 'Menlo', 'Hack', 'Monaco', 'DejaVu Sans Mono', 'Droid Sans Mono', 'monospace', monospace, 'Droid Sans Fallback'",
  "vim.leader": "<space>",
  "editor.renderControlCharacters": false,
  "breadcrumbs.enabled": false,
  "editor.renderWhitespace": "none",
  "workbench.colorCustomizations": {
    // "statusBar.background": "#6199bf",
    "editorLineNumber.foreground": "#CBCBCD",
    "list.activeSelectionBackground": "#C9DEEB"
  },
  "editor.tokenColorCustomizations": {
    "comments": "#6A737D",
    //"functions": "#C586C0",
    // "keywords": "#569CD6",
    // "types": "#C586C0",
    "textMateRules": [
      {
        "scope": [
          "constant.keyword.clojure"
        ],
        "settings": {
          "foreground": "#0366D6"
        }
      },
      // {
      //   "scope": [
      //     "punctuation.section.expression.begin.clojure",
      //     "punctuation.section.expression.end.trailing.clojure"
      //   ],
      //   "settings": {
      //     "foreground": "#999"
      //   }
      // }
    ]
  },
  "workbench.view.alwaysShowHeaderActions": true,
  "editor.formatOnSave": true,
  "terminal.integrated.fontSize": 16,
  "[Log]": {
    "editor.fontSize": 16
  },
  "editor.autoClosingBrackets": "beforeWhitespace",
  "outline.problems.enabled": false,
  "[clojure]": {
    "editor.matchBrackets": true
  },
  "debug.console.fontSize": 16,
  "calva.lintOnSave": true,
  "calva.fmt.removeConsecutiveBlankLines": true,
  "editor.formatOnPaste": true,
  "rust-analyzer.enableEnhancedTyping": false,
  "rust-analyzer.enableCargoWatchOnStartup": "enabled",
  "explorer.confirmDelete": false,
  "workbench.tree.indent": 20,
  "workbench.editor.showTabs": true,
  "window.menuBarVisibility": "toggle",
  "workbench.colorTheme": "Visual Studio Light",
  // "clojureWarrior.enableBracketColors": false,
  // "rest-client.enableTelemetry": false,
  // "rest-client.timeoutinmilliseconds": 20000,
  // "rust.build_on_save": true,
  // "rust.jobs": 4,
  // "rust.clippy_preference": "on",
}
// {
//   "before": [
//     "<C-k>",
//   ],
//   "after": [
//     "{",
//   ],
//   "when": "editorFocus",
// },
// {
//   "before": [
//     "<C-k>",
//   ],
//   "commands": [
//     "list.focusUp",
//   ],
//   "when": "listFocus && !inputFocus",
// },
// {
//   "before": [
//     "/"
//   ],
//   "commands": [
//     "actions.find",
//   ]
// },
// {
//   "before": [
//     ":"
//   ],
//   "commands": [
//     "workbench.action.showCommands",
//   ]
// },