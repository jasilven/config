;; The deps.edn file describes the information needed to build a classpath.
;;
;; When using the `clojure` or `clj` script, there are several deps.edn files
;; that are combined:
;; - install-level
;; - user level (this file)
;; - project level (current directory when invoked)
;;
;; For all attributes other than :paths, these config files are merged left to right.
;; Only the last :paths is kept and others are dropped.

{:aliases {:1.2 {:override-deps {org.clojure/clojure {:mvn/version "1.2.1"}}}
           :1.3 {:override-deps {org.clojure/clojure {:mvn/version "1.3.0"}}}
           :1.4 {:override-deps {org.clojure/clojure {:mvn/version "1.4.0"}}}
           :1.5 {:override-deps {org.clojure/clojure {:mvn/version "1.5.1"}}}
           :1.6 {:override-deps {org.clojure/clojure {:mvn/version "1.6.0"}}}
           :1.7 {:override-deps {org.clojure/clojure {:mvn/version "1.7.0"}}}
           :1.8 {:override-deps {org.clojure/clojure {:mvn/version "1.8.0"}}}
           :1.9 {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
           :1.10 {:override-deps {org.clojure/clojure {:mvn/version "1.10.0"}}}
           :1.10.1 {:override-deps {org.clojure/clojure {:mvn/version "1.10.1"}}}
           :test {:extra-paths ["test"]
                  :extra-deps {org.clojure/test.check {:mvn/version "RELEASE"}}}
           :runner {:extra-deps {com.cognitect/test-runner
                                 {:git/url "https://github.com/cognitect-labs/test-runner"
                                  :sha "3cb0a9daf1cb746259dc8309b218f9211ad3b33b"}}
                    :main-opts ["-m" "cognitect.test-runner"
                                "-d" "test"]}
           :nrepl {:extra-deps {nrepl {:mvn/version "RELEASE"}} :main-opts ["-m" "nrepl.cmdline"]}
           :socket {:jvm-opts ["-Dclojure.server.repl={:port,5555,:accept,clojure.core.server/repl}"]}
           :proto {:extra-deps {proto-repl {:mvn/version "RELEASE"}}}
           :prepl {:jvm-opts ["-Dclojure.server.repl={:port,5555,:accept,clojure.core.server/io-prepl}"]}
           :rebel {:extra-deps {com.bhauman/rebel-readline {:mvn/version "RELEASE"}}
                   :main-opts ["-m" "rebel-readline.main"]}
           :comp {:extra-deps {compliment {:mvn/version "RELEASE"}}}
           :atom {:extra-deps {compliment {:mvn/version "RELEASE"}
                               org.clojure/tools.namespace {:mvn/version "RELEASE"}}
                  :jvm-opts ["-Dclojure.server.repl={:port,5555,:accept,clojure.core.server/repl}"]}
           :rebl {:extra-deps {org.clojure/core.async {:mvn/version "0.4.490"}
                ;; deps for file datafication (0.9.149 or later)
                               org.clojure/data.csv {:mvn/version "0.1.4"}
                               org.clojure/data.json {:mvn/version "0.2.3"}
                               org.yaml/snakeyaml {:mvn/version "1.23"}
                               com.cognitect/rebl
                ;; adjust to match your install location
                               {:local/root "/home/jari/bin/REBL-0.9.172.jar"}
                               org.openjfx/javafx-fxml     {:mvn/version "11.0.1"}
                               org.openjfx/javafx-controls {:mvn/version "11.0.1"}
                               org.openjfx/javafx-graphics {:mvn/version "11.0.1"}
                               org.openjfx/javafx-media    {:mvn/version "11.0.1"}
                               org.openjfx/javafx-swing    {:mvn/version "11.0.1"}
                               org.openjfx/javafx-base     {:mvn/version "11.0.1"}
                               org.openjfx/javafx-web      {:mvn/version "11.0.1"}}
                  :main-opts ["-m" "cognitect.rebl"]}
           :rebl8 {:extra-deps {org.clojure/core.async {:mvn/version "0.4.490"}
                ;; deps for file datafication (0.9.149 or later)
                                org.clojure/data.csv {:mvn/version "0.1.4"}
                                org.clojure/data.json {:mvn/version "0.2.3"}
                                org.yaml/snakeyaml {:mvn/version "1.23"}
                                com.cognitect/rebl
                ;; adjust to match your install location
                                {:local/root "/home/jari/bin/REBL-0.9.172.jar"}}
                   :main-opts ["-m" "cognitect.rebl"]}
           :cider {:extra-deps {cljfmt {:mvn/version "0.5.1"}
                                cider/cider-nrepl {:mvn/version "0.21.2-SNAPSHOT"}
                                nrepl {:mvn/version "0.6.0"}}
                   :main-opts ["-m" "nrepl.cmdline" "--interactive" "--middleware" "[cider.nrepl/cider-middleware]"]
                   :extra-paths ["test"]}
           :bench {:extra-deps {criterium {:mvn/version "RELEASE"}}}
           :eastwood {:extra-deps {jonase/eastwood {:mvn/version "RELEASE"}}
                      :main-opts ["-m" "eastwood.lint" "{:source-paths,[\"src\"],:test-paths,[\"test\"]}"]}
           :expect {:extra-deps {expectations {:mvn/version "RELEASE"}}}
           :measure {:extra-deps {com.clojure-goes-fast/clj-memory-meter {:mvn/version "RELEASE"}}}
           :outdated {:extra-deps {olical/depot {:mvn/version "RELEASE"}}
                      :main-opts ["-m" "depot.outdated.main"]}
  ;; uberjar building:
  ;; - see https://github.com/seancorfield/depstar for a minimalist approach:
  ;;   - clj -A:uberjar result.jar
  ;; - to run it:
  ;;   - java -cp result.jar clojure.main -m mymain.namespace
  ;; - build a library JAR:
  ;;   - clj -A:jar result-lib.jar
           :uberjar {:extra-deps {seancorfield/depstar {:mvn/version "RELEASE"}}
                     :main-opts ["-m" "hf.depstar.uberjar"]}
           :jar {:extra-deps {seancorfield/depstar {:mvn/version "RELEASE"}}
                 :main-opts ["-m" "hf.depstar.jar"]}}}
